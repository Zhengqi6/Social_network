# Decentralized Social Recommendation System Environment Configuration
# Copy this file to .env and fill in your actual values

# API Keys
SOCIAL_API_KEY=your_api_key_here
FARCASTER_API_KEY=your_farcaster_api_key_here
LENS_API_KEY=your_lens_api_key_here

# Lens GraphQL (Bearer authentication)
# Generate token with: PRIVATE_KEY=0x... python scripts/lens_auth.py --write-env
LENS_GRAPHQL_ENDPOINT=https://api-v2.lens.dev
LENS_API_BEARER=

# Database Configuration
MONGODB_URI=mongodb://localhost:27017/social_recommendation
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password
REDIS_URI=redis://localhost:6379

# Blockchain Configuration
ETHEREUM_MAINNET_RPC=https://mainnet.infura.io/v3/YOUR_PROJECT_ID
POLYGON_RPC=https://polygon-rpc.com
LENS_CHAIN_RPC=https://rpc.lens.xyz

# Data Collection Configuration
MAX_PROFILES=100
MAX_POSTS_PER_PROFILE=50
COLLECTION_INTERVAL_MINUTES=60
CONTINUOUS_MODE=false

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=logs/data_collection.log

# Rate Limiting
FARCASTER_RATE_LIMIT=100
LENS_RATE_LIMIT=50
ZORA_RATE_LIMIT=200

# Storage Configuration
MONGODB_DATABASE=social_recommendation
NEO4J_DATABASE=neo4j
REDIS_DATABASE=0
REDIS_TTL=3600

# Model Configuration
MODEL_BATCH_SIZE=32
MODEL_LEARNING_RATE=0.001
MODEL_EPOCHS=100
MODEL_VALIDATION_SPLIT=0.2

# Feature Engineering
FEATURE_WINDOW_DAYS=30
MIN_INTERACTIONS=5
MAX_FEATURES=1000

# Evaluation Configuration
EVALUATION_METRICS=precision,recall,f1,auc
CROSS_VALIDATION_FOLDS=5
TEST_SIZE=0.2
